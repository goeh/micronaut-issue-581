buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.15"
    }
}

ext.buildNumber = {
    def buildNumber = System.getenv('TRAVIS_BUILD_NUMBER')
    if (buildNumber == null || buildNumber.allWhitespace) {
        buildNumber = '1.0.0-SNAPSHOT'
    }
    return buildNumber
}
version = buildNumber()


//version "0.1"
group "org.gr8crm.tag"

apply plugin:"io.spring.dependency-management"
apply plugin:"com.github.johnrengelman.shadow"
apply plugin:"application"
apply plugin:"java"
apply plugin:"net.ltgt.apt-eclipse"
apply plugin:"net.ltgt.apt-idea"


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:bom:1.0.0.BUILD-SNAPSHOT'
    }
}

dependencies {
    annotationProcessor "io.micronaut:inject-java"
    compile "io.micronaut:inject"
    compile "io.micronaut:runtime"
    compile "io.micronaut:http-client"
    compile "io.micronaut:http-server-netty"
    compile "io.micronaut:security-jwt"
    compile "io.micronaut.configuration:kafka"
    compile "io.micronaut.configuration:mongo-reactive"
    compile "org.bouncycastle:bcpkix-jdk15on:1.60"
    compile "io.micronaut.configuration:hibernate-validator"
    compileOnly "io.micronaut:inject-java"
    runtime "io.micronaut:discovery-client"

    runtime "ch.qos.logback:logback-classic:1.2.3"
    testCompile "junit:junit:4.12"
    testCompile "io.micronaut:inject-java"
    testRuntime "de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.1"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "org.gr8crm.tag.Application"
compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

task docker(dependsOn: build) {
    def dockerStageDir = new File(project.buildDir, "docker")
    //def repoName = 'technipelago/' + project.name
    def tagName = buildNumber()
    def jarName = "${project.name}-${version}-all.jar"
    doLast {
        copy {
            from shadowJar
            into dockerStageDir
        }

        def buildFile = new File(dockerStageDir, "Dockerfile")
        buildFile.text = """\
FROM openjdk:8-jre-slim
RUN apt-get update && apt-get install -y curl
ADD ${jarName} ${jarName}
RUN sh -c 'touch /${jarName}'
VOLUME ["/tmp"]
ENTRYPOINT ["sh", "-c", "exec java -jar \$JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -Xms64m -Xmx64m /${jarName}"]
        
EXPOSE 8091
"""

        exec {
            workingDir = dockerStageDir
            commandLine 'docker', 'build', '-t', "${project.name}:${tagName}", '.'
            //commandLine 'docker', 'build', '--pull', '-t', "${repoName}:${tagName}", '.'
        }
        /*exec {
            workingDir = dockerStageDir
            commandLine 'docker', 'push', "${repoName}:${tagName}"
        }*/
    }
}
